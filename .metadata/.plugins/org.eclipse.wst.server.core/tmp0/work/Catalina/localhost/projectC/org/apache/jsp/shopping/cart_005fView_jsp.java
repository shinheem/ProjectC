/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.78
 * Generated at: 2023-09-12 06:22:46 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.shopping;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class cart_005fView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(3);
    _jspx_dependants.put("/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar", Long.valueOf(1693528367077L));
    _jspx_dependants.put("jar:file:/F:/iclass0419/projectC/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/projectC/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/c.tld", Long.valueOf(1425946270000L));
    _jspx_dependants.put("jar:file:/F:/iclass0419/projectC/.metadata/.plugins/org.eclipse.wst.server.core/tmp0/wtpwebapps/projectC/WEB-INF/lib/taglibs-standard-impl-1.2.5.jar!/META-INF/fmt.tld", Long.valueOf(1425946270000L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems;
  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005ftype_005fcurrencySymbol_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
    _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005ftype_005fcurrencySymbol_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.release();
    _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005ftype_005fcurrencySymbol_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=EUC-KR");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<link rel=\"stylesheet\" href=\"../assets/css/cart.css?=3\"/>\r\n");
      out.write("<title>장바구니</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("<!-- Header -->\r\n");
      out.write("         <header id=\"header\">\r\n");
      out.write("         <div>\r\n");
      out.write("            <div class=\"inner\">\r\n");
      out.write("                  <ul>\r\n");
      out.write("                     <li><a href=\"index.html\">공지사항</a></li>\r\n");
      out.write("                     <li><a href=\"#\">마이페이지</a></li>\r\n");
      out.write("                     <li><a href=\"cart.jsp\">장바구니</a></li>\r\n");
      out.write("                     <li><a href=\"elements.html\">고객센터</a></li>\r\n");
      out.write("                  </ul>      \r\n");
      out.write("               </div>\r\n");
      out.write("               <div class=\"first\">\r\n");
      out.write("                  <ul>\r\n");
      out.write("                     <li><a href=\"#\">OUTER</a></li>\r\n");
      out.write("                     <li><a href=\"#\">TOP</a></li>\r\n");
      out.write("                     <li><a href=\"#\">PANTS</a></li>\r\n");
      out.write("                     <li><a href=\"#\">SHOES</a></li>\r\n");
      out.write("                     <li><a href=\"#\">STYLING</a></li>\r\n");
      out.write("                  </ul>\r\n");
      out.write("               </div>\r\n");
      out.write("         </div>\r\n");
      out.write("         </header>\r\n");
      out.write("         \r\n");
      out.write("      <!-- Search Bar -->\r\n");
      out.write("         <div id=\"search\">\r\n");
      out.write("         <a class=\"logo\" href=\"../index.jsp\"><strong>Bello</strong></a> \r\n");
      out.write("            <!-- <div class=\"inner\">\r\n");
      out.write("               <div class=\"content\">\r\n");
      out.write("                  <form method=\"post\" action=\"#\">\r\n");
      out.write("                     <input type=\"search\" name=\"query\" id=\"query\" value=\"\" placeholder=\"Search our site\" />\r\n");
      out.write("                  </form>\r\n");
      out.write("               </div>\r\n");
      out.write("            </div>\r\n");
      out.write(" -->         </div>\r\n");
      out.write(" \r\n");
      out.write(" \r\n");
      out.write("<form name=\"orderform\" id=\"orderform\" method=\"post\" class=\"orderform\" action=\"/Page\" onsubmit=\"return false;\">\r\n");
      out.write("    \r\n");
      out.write("            <input type=\"hidden\" name=\"cmd\" value=\"order\">\r\n");
      out.write("            <div class=\"basketdiv\" id=\"basket\">\r\n");
      out.write("                <div class=\"row head\">\r\n");
      out.write("                    <div class=\"subdiv\">\r\n");
      out.write("                        <div class=\"check\">선택</div>\r\n");
      out.write("                        <div class=\"img\">이미지</div>\r\n");
      out.write("                        <div class=\"pname\">상품명</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"subdiv\">\r\n");
      out.write("                        <div class=\"basketprice\">가격</div>\r\n");
      out.write("                        <div class=\"num\">수량</div>\r\n");
      out.write("                        <div class=\"sum\">합계</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"subdiv\">\r\n");
      out.write("    \r\n");
      out.write("                        <div class=\"basketcmd\">삭제</div>\r\n");
      out.write("                    </div>\r\n");
      out.write("                    <div class=\"split\"></div>\r\n");
      out.write("                </div>\r\n");
      out.write("        		");
      if (_jspx_meth_c_005fforEach_005f0(_jspx_page_context))
        return;
      out.write("\r\n");
      out.write("            </div>\r\n");
      out.write("    \r\n");
      out.write("            <div class=\"right-align basketrowcmd\">\r\n");
      out.write("                <a href=\"javascript:void(0)\" class=\"abutton\" onclick=\"javascript:basket.delAllItem();\">장바구니비우기</a>\r\n");
      out.write("            </div>\r\n");
      out.write("    \r\n");
      out.write("            <div class=\"bigtext right-align sumcount\" id=\"sum_p_num\">상품갯수: 4개</div>\r\n");
      out.write("            <div class=\"bigtext right-align box blue summoney\" id=\"sum_p_price\">합계금액: 74,200원</div>\r\n");
      out.write("    \r\n");
      out.write("            <div id=\"goorder\" class=\"\">\r\n");
      out.write("                <div class=\"clear\"></div>\r\n");
      out.write("                <div class=\"buttongroup center-align cmd\">\r\n");
      out.write("                    <a href=\"javascript:void(0);\">선택한 상품 주문</a>\r\n");
      out.write("                </div>\r\n");
      out.write("            </div>\r\n");
      out.write("        </form>\r\n");
      out.write("        <!-- Footer -->\r\n");
      out.write("         <footer id=\"footer\"> \r\n");
      out.write("                  <h4>&copy; Untitled Corporation. All rights reserved. Lorem ipsum dolor sit amet nullam.</h4>\r\n");
      out.write("                         <ul>\r\n");
      out.write("                        <li class=\"icon solid fa-map-marker-alt\"></li>\r\n");
      out.write("                        <li class=\"icon solid fa-envelope\"></li>\r\n");
      out.write("                        <li class=\"icon brands fa-twitter\"></li>\r\n");
      out.write("                        <li class=\"icon solid fa-phone\"></li>\r\n");
      out.write("                        </ul>\r\n");
      out.write("         </footer>\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("let basket = {\r\n");
      out.write("       totalCount: 0, \r\n");
      out.write("       totalPrice: 0,\r\n");
      out.write("       //체크한 장바구니 상품 비우기\r\n");
      out.write("       delCheckedItem: function(){\r\n");
      out.write("           document.querySelectorAll(\"input[name=buy]:checked\").forEach(function (item) {\r\n");
      out.write("               item.parentElement.parentElement.parentElement.remove();\r\n");
      out.write("           });\r\n");
      out.write("           //AJAX 서버 업데이트 전송\r\n");
      out.write("       \r\n");
      out.write("           //전송 처리 결과가 성공이면\r\n");
      out.write("           this.reCalc();\r\n");
      out.write("           this.updateUI();\r\n");
      out.write("       },\r\n");
      out.write("       //장바구니 전체 비우기\r\n");
      out.write("       delAllItem: function(){\r\n");
      out.write("           document.querySelectorAll('.row.data').forEach(function (item) {\r\n");
      out.write("               item.remove();\r\n");
      out.write("             });\r\n");
      out.write("             //AJAX 서버 업데이트 전송\r\n");
      out.write("           \r\n");
      out.write("             //전송 처리 결과가 성공이면\r\n");
      out.write("             this.totalCount = 0;\r\n");
      out.write("             this.totalPrice = 0;\r\n");
      out.write("             this.reCalc();\r\n");
      out.write("             this.updateUI();\r\n");
      out.write("       },\r\n");
      out.write("       //재계산\r\n");
      out.write("       reCalc: function(){\r\n");
      out.write("           this.totalCount = 0;\r\n");
      out.write("           this.totalPrice = 0;\r\n");
      out.write("           document.querySelectorAll(\".p_num\").forEach(function (item) {\r\n");
      out.write("               if(item.parentElement.parentElement.parentElement.previousElementSibling.firstElementChild.firstElementChild.checked == true){\r\n");
      out.write("                   var count = parseInt(item.getAttribute('value'));\r\n");
      out.write("                   this.totalCount += count;\r\n");
      out.write("                   var price = item.parentElement.parentElement.previousElementSibling.firstElementChild.getAttribute('value');\r\n");
      out.write("                   this.totalPrice += count * price;\r\n");
      out.write("               }\r\n");
      out.write("           }, this); // forEach 2번째 파라메터로 객체를 넘겨서 this 가 객체리터럴을 가리키도록 함. - thisArg\r\n");
      out.write("       },\r\n");
      out.write("       //화면 업데이트\r\n");
      out.write("       updateUI: function () {\r\n");
      out.write("           document.querySelector('#sum_p_num').textContent = '상품갯수: ' + this.totalCount.formatNumber() + '개';\r\n");
      out.write("           document.querySelector('#sum_p_price').textContent = '합계금액: ' + this.totalPrice.formatNumber() + '원';\r\n");
      out.write("       },\r\n");
      out.write("       //개별 수량 변경\r\n");
      out.write("       changePNum: function (pos) {\r\n");
      out.write("           var item = document.querySelector('input[name=p_num'+pos+']');\r\n");
      out.write("           var p_num = parseInt(item.getAttribute('value'));\r\n");
      out.write("           var newval = event.target.classList.contains('up') ? p_num+1 : event.target.classList.contains('down') ? p_num-1 : event.target.value;\r\n");
      out.write("           \r\n");
      out.write("           if (parseInt(newval) < 1 || parseInt(newval) > 99) { return false; }\r\n");
      out.write("\r\n");
      out.write("           item.setAttribute('value', newval);\r\n");
      out.write("           item.value = newval;\r\n");
      out.write("\r\n");
      out.write("           var price = item.parentElement.parentElement.previousElementSibling.firstElementChild.getAttribute('value');\r\n");
      out.write("           item.parentElement.parentElement.nextElementSibling.textContent = (newval * price).formatNumber()+\"원\";\r\n");
      out.write("           //AJAX 업데이트 전송\r\n");
      out.write("\r\n");
      out.write("           //전송 처리 결과가 성공이면    \r\n");
      out.write("           this.reCalc();\r\n");
      out.write("           this.updateUI();\r\n");
      out.write("       },\r\n");
      out.write("       checkItem: function () {\r\n");
      out.write("           this.reCalc();\r\n");
      out.write("           this.updateUI();\r\n");
      out.write("       },\r\n");
      out.write("       delItem: function () {\r\n");
      out.write("           event.target.parentElement.parentElement.parentElement.remove();\r\n");
      out.write("           this.reCalc();\r\n");
      out.write("           this.updateUI();\r\n");
      out.write("       }\r\n");
      out.write("   }\r\n");
      out.write("\r\n");
      out.write("   // 숫자 3자리 콤마찍기\r\n");
      out.write("   Number.prototype.formatNumber = function(){\r\n");
      out.write("       if(this==0) return 0;\r\n");
      out.write("       let regex = /(^[+-]?\\d+)(\\d{3})/;\r\n");
      out.write("       let nstr = (this + '');\r\n");
      out.write("       while (regex.test(nstr)) nstr = nstr.replace(regex, '$1' + ',' + '$2');\r\n");
      out.write("       return nstr;\r\n");
      out.write("   };\r\n");
      out.write("</script>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005fforEach_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:forEach
    org.apache.taglibs.standard.tag.rt.core.ForEachTag _jspx_th_c_005fforEach_005f0 = (org.apache.taglibs.standard.tag.rt.core.ForEachTag) _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.get(org.apache.taglibs.standard.tag.rt.core.ForEachTag.class);
    boolean _jspx_th_c_005fforEach_005f0_reused = false;
    try {
      _jspx_th_c_005fforEach_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005fforEach_005f0.setParent(null);
      // /shopping/cart_View.jsp(71,10) name = var type = java.lang.String reqTime = false required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setVar("vo");
      // /shopping/cart_View.jsp(71,10) name = items type = javax.el.ValueExpression reqTime = true required = false fragment = false deferredValue = true expectedTypeName = java.lang.Object deferredMethod = false methodSignature = null
      _jspx_th_c_005fforEach_005f0.setItems(new org.apache.jasper.el.JspValueExpression("/shopping/cart_View.jsp(71,10) '${cartlist}'",_jsp_getExpressionFactory().createValueExpression(_jspx_page_context.getELContext(),"${cartlist}",java.lang.Object.class)).getValue(_jspx_page_context.getELContext()));
      int[] _jspx_push_body_count_c_005fforEach_005f0 = new int[] { 0 };
      try {
        int _jspx_eval_c_005fforEach_005f0 = _jspx_th_c_005fforEach_005f0.doStartTag();
        if (_jspx_eval_c_005fforEach_005f0 != javax.servlet.jsp.tagext.Tag.SKIP_BODY) {
          do {
            out.write("\r\n");
            out.write("                <div class=\"row data\">\r\n");
            out.write("                    <div class=\"subdiv\">\r\n");
            out.write("                        <div class=\"check\"><input type=\"checkbox\" name=\"buy\" value=\"260\" onclick=\"javascript:basket.checkItem();\">&nbsp;</div>\r\n");
            out.write("                        <div class=\"img\"><img src=\"/imageupload/");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.clothesImage}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" width=\"60\"></div>\r\n");
            out.write("                        <div class=\"pname\">\r\n");
            out.write("                            <span>");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.clothesName}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("</span>\r\n");
            out.write("                        </div>\r\n");
            out.write("                    </div>\r\n");
            out.write("                    <div class=\"subdiv\">\r\n");
            out.write("                        <div class=\"basketprice1\"><input type=\"hidden\" name=\"p_price\" id=\"p_price1\" class=\"p_price\">");
            if (_jspx_meth_fmt_005fformatNumber_005f0(_jspx_th_c_005fforEach_005f0, _jspx_page_context, _jspx_push_body_count_c_005fforEach_005f0))
              return true;
            out.write("</div>\r\n");
            out.write("                        <div class=\"num\">\r\n");
            out.write("                            <div class=\"updown\">\r\n");
            out.write("                                <input type=\"text\" name=\"p_num1\" id=\"p_num1\" size=\"2\" maxlength=\"4\" class=\"p_num\" value=\"");
            out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.cartQuantity}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
            out.write("\" onkeyup=\"javascript:basket.changePNum(1);\">\r\n");
            out.write("                            </div>\r\n");
            out.write("                        </div>\r\n");
            out.write("                        <div class=\"sum\"><!-- 합계 --></div>\r\n");
            out.write("                    </div>\r\n");
            out.write("                    <div class=\"subdiv\">\r\n");
            out.write("                        <div class=\"basketcmd1\"><a href=\"javascript:void(0)\" class=\"abutton\" onclick=\"javascript:basket.delItem();\">삭제</a></div>\r\n");
            out.write("                    </div>\r\n");
            out.write("                </div>\r\n");
            out.write("            ");
            int evalDoAfterBody = _jspx_th_c_005fforEach_005f0.doAfterBody();
            if (evalDoAfterBody != javax.servlet.jsp.tagext.BodyTag.EVAL_BODY_AGAIN)
              break;
          } while (true);
        }
        if (_jspx_th_c_005fforEach_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
          return true;
        }
      } catch (java.lang.Throwable _jspx_exception) {
        while (_jspx_push_body_count_c_005fforEach_005f0[0]-- > 0)
          out = _jspx_page_context.popBody();
        _jspx_th_c_005fforEach_005f0.doCatch(_jspx_exception);
      } finally {
        _jspx_th_c_005fforEach_005f0.doFinally();
      }
      _005fjspx_005ftagPool_005fc_005fforEach_0026_005fvar_005fitems.reuse(_jspx_th_c_005fforEach_005f0);
      _jspx_th_c_005fforEach_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005fforEach_005f0, _jsp_getInstanceManager(), _jspx_th_c_005fforEach_005f0_reused);
    }
    return false;
  }

  private boolean _jspx_meth_fmt_005fformatNumber_005f0(javax.servlet.jsp.tagext.JspTag _jspx_th_c_005fforEach_005f0, javax.servlet.jsp.PageContext _jspx_page_context, int[] _jspx_push_body_count_c_005fforEach_005f0)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  fmt:formatNumber
    org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag _jspx_th_fmt_005fformatNumber_005f0 = (org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag) _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005ftype_005fcurrencySymbol_005fnobody.get(org.apache.taglibs.standard.tag.rt.fmt.FormatNumberTag.class);
    boolean _jspx_th_fmt_005fformatNumber_005f0_reused = false;
    try {
      _jspx_th_fmt_005fformatNumber_005f0.setPageContext(_jspx_page_context);
      _jspx_th_fmt_005fformatNumber_005f0.setParent((javax.servlet.jsp.tagext.Tag) _jspx_th_c_005fforEach_005f0);
      // /shopping/cart_View.jsp(81,116) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatNumber_005f0.setValue((java.lang.Object) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${vo.price2}", java.lang.Object.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null));
      // /shopping/cart_View.jsp(81,116) name = type type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatNumber_005f0.setType("currency");
      // /shopping/cart_View.jsp(81,116) name = currencySymbol type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_fmt_005fformatNumber_005f0.setCurrencySymbol("￦");
      int _jspx_eval_fmt_005fformatNumber_005f0 = _jspx_th_fmt_005fformatNumber_005f0.doStartTag();
      if (_jspx_th_fmt_005fformatNumber_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005ffmt_005fformatNumber_0026_005fvalue_005ftype_005fcurrencySymbol_005fnobody.reuse(_jspx_th_fmt_005fformatNumber_005f0);
      _jspx_th_fmt_005fformatNumber_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_fmt_005fformatNumber_005f0, _jsp_getInstanceManager(), _jspx_th_fmt_005fformatNumber_005f0_reused);
    }
    return false;
  }
}
